{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\covid tracker\\\\covid19\\\\covidtracker\\\\src\\\\LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n  const options = {\n    legend: {\n      display: false\n    },\n    elements: {\n      point: {\n        radius: 0\n      }\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      mode: \"index\",\n      intersect: false,\n      callbacks: {\n        label: function (tooltipItem, data) {\n          return numeral(tooltipItem.value).format(\"+0,0\");\n        }\n      }\n    },\n    scales: {\n      xAxes: [{\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\"\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          display: false\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          }\n        }\n      }]\n    }\n  };\n\n  const buildChartData = function (data) {\n    let casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'cases';\n    let chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n      console.log(data);\n      const chartData = buildChartData(data);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" i am a graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineGraph, \"wpgUsBY956btMcg33+x8PhIaewY=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","useState","useEffect","Line","numeral","LineGraph","data","setData","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","console","log","datasets","backgroundColor","borderColor"],"sources":["C:/Users/HP/Desktop/covid tracker/covid19/covidtracker/src/LineGraph.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Line} from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction LineGraph() {\r\n\r\nconst[data,setData]=useState({});\r\n\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType='cases') => {\r\n    let chartData = [];\r\n    let lastDataPoint;\r\n    for(let date in data.cases) {\r\n        if(lastDataPoint) {\r\n            let newDataPoint ={\r\n                x:date,\r\n                y:data[casesType][date]-lastDataPoint\r\n            };\r\n              chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint=data[casesType][date];\r\n    }\r\n return chartData;\r\n}\r\n\r\nuseEffect(() => {\r\nfetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n.then((response) => response.json())\r\n.then((data) =>\r\n{\r\n    console.log(data);\r\n    const chartData=buildChartData(data);\r\n    setData(chartData); \r\n});\r\n},[]);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <h1> i am a graph</h1>\r\n        <Line data={{\r\n          datasets: [\r\n            {\r\n              backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n              data:data,\r\n            },\r\n          ],\r\n        }} \r\n        options={options}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,OAAOC,OAAP,MAAoB,SAApB;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EAErB,MAAK,CAACC,IAAD,EAAMC,OAAN,IAAeN,QAAQ,CAAC,EAAD,CAA5B;EAGA,MAAMO,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,OAAO,EAAE;IADH,CADM;IAIdC,QAAQ,EAAE;MACRC,KAAK,EAAE;QACLC,MAAM,EAAE;MADH;IADC,CAJI;IASdC,mBAAmB,EAAE,KATP;IAUdC,QAAQ,EAAE;MACRC,IAAI,EAAE,OADE;MAERC,SAAS,EAAE,KAFH;MAGRC,SAAS,EAAE;QACTC,KAAK,EAAE,UAAUC,WAAV,EAAuBd,IAAvB,EAA6B;UAClC,OAAOF,OAAO,CAACgB,WAAW,CAACC,KAAb,CAAP,CAA2BC,MAA3B,CAAkC,MAAlC,CAAP;QACD;MAHQ;IAHH,CAVI;IAmBdC,MAAM,EAAE;MACNC,KAAK,EAAE,CACL;QACEC,IAAI,EAAE,MADR;QAEEC,IAAI,EAAE;UACJJ,MAAM,EAAE,UADJ;UAEJK,aAAa,EAAE;QAFX;MAFR,CADK,CADD;MAUNC,KAAK,EAAE,CACL;QACEC,SAAS,EAAE;UACTnB,OAAO,EAAE;QADA,CADb;QAIEoB,KAAK,EAAE;UACL;UACAC,QAAQ,EAAE,UAAUV,KAAV,EAAiBW,KAAjB,EAAwBC,MAAxB,EAAgC;YACxC,OAAO7B,OAAO,CAACiB,KAAD,CAAP,CAAeC,MAAf,CAAsB,IAAtB,CAAP;UACD;QAJI;MAJT,CADK;IAVD;EAnBM,CAAhB;;EA6CA,MAAMY,cAAc,GAAG,UAAC5B,IAAD,EAA6B;IAAA,IAAtB6B,SAAsB,uEAAZ,OAAY;IAChD,IAAIC,SAAS,GAAG,EAAhB;IACA,IAAIC,aAAJ;;IACA,KAAI,IAAIC,IAAR,IAAgBhC,IAAI,CAACiC,KAArB,EAA4B;MACxB,IAAGF,aAAH,EAAkB;QACd,IAAIG,YAAY,GAAE;UACdC,CAAC,EAACH,IADY;UAEdI,CAAC,EAACpC,IAAI,CAAC6B,SAAD,CAAJ,CAAgBG,IAAhB,IAAsBD;QAFV,CAAlB;QAIED,SAAS,CAACO,IAAV,CAAeH,YAAf;MACL;;MACDH,aAAa,GAAC/B,IAAI,CAAC6B,SAAD,CAAJ,CAAgBG,IAAhB,CAAd;IACH;;IACJ,OAAOF,SAAP;EACA,CAdD;;EAgBAlC,SAAS,CAAC,MAAM;IAChB0C,KAAK,CAAC,4DAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOvC,IAAD,IACN;MACI0C,OAAO,CAACC,GAAR,CAAY3C,IAAZ;MACA,MAAM8B,SAAS,GAACF,cAAc,CAAC5B,IAAD,CAA9B;MACAC,OAAO,CAAC6B,SAAD,CAAP;IACH,CAPD;EAQC,CATQ,EASP,EATO,CAAT;EAcE,oBACE;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,IAAD;MAAM,IAAI,EAAE;QACVc,QAAQ,EAAE,CACR;UACEC,eAAe,EAAE,wBADnB;UAEIC,WAAW,EAAE,SAFjB;UAGE9C,IAAI,EAACA;QAHP,CADQ;MADA,CAAZ;MASA,OAAO,EAAEE;IATT;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GAhGQH,S;;KAAAA,S;AAkGT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}